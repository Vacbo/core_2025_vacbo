name: VHD tests
'on':
  workflow_dispatch: {}
  push:
    paths:
    - src/**
    - test/**
    - .github/workflows/vhd_tests.yml

jobs:
  test:
    name: Test ${{ matrix.component }}
    runs-on: ubuntu-latest
    container:
      image: hdlc/ghdl:yosys
    env:
      RISCV_PATH: /opt/riscv
    strategy:
      matrix:
          include:
          - component: test_CPU_package.py
            enabled: false
          - component: test_CPU_EXECUTION_FOWARDING_UNIT.py
            enabled: false
          - component: test_CPU_STAGE_EX.py
            enabled: false
          - component: test_CPU_STAGE_ID.py
            enabled: false
          - component: test_CPU_STAGE_IF.py
            enabled: false
          - component: test_CPU_STAGE_MEM.py
            enabled: false
          - component: test_CPU_STAGE_WB.py
            enabled: false
          - component: test_CPU_TOP_LEVEL.py
            enabled: true
          - component: test_GENERICS_package.py
            enabled: false
          - component: test_GENERIC_ADDER.py
            enabled: true
          - component: test_GENERIC_COMPARATOR.py
            enabled: true
          - component: test_GENERIC_DEBOUNCE.py
            enabled: false
          - component: test_GENERIC_EDGE_DETECTOR.py
            enabled: true
          - component: test_GENERIC_FLIP_FLOP.py
            enabled: true
          - component: test_GENERIC_MUX_2X1.py
            enabled: true
          - component: test_GENERIC_MUX_4X1.py
            enabled: true
          - component: test_GENERIC_RAM.py
            enabled: true
          - component: test_GENERIC_REGISTER.py
            enabled: true
          - component: test_GENERIC_ROM.py
            enabled: true
          - component: test_GENERIC_SIGNAL_EXTENDER.py
            enabled: false
          - component: test_MODULES_package.py
            enabled: false
          - component: test_MODULE_BRANCH_COMPARE_UNIT.py
            enabled: true
          - component: test_MODULE_BRANCH_UNIT.py
            enabled: false
          - component: test_MODULE_CONTROL_UNIT.py
            enabled: true
          - component: test_MODULE_EXECUTION_UNIT_CONTROLLER.py
            enabled: true
          - component: test_MODULE_EXECUTION_UNIT.py
            enabled: true
          - component: test_MODULE_PROGRAM_COUNTER.py
            enabled: false
          - component: test_MODULE_REGISTER_FILE.py
            enabled: true
          - component: test_MODULE_WRITE_BACK.py
            enabled: true
          - component: test_RV32I_package.py
            enabled: false
          - component: test_RV32I_ALU_BIT.py
            enabled: true
          - component: test_RV32I_ALU_SHIFTER.py
            enabled: true
          - component: test_RV32I_ALU.py
            enabled: true
          - component: test_RV32I_BRANCH_CONTROLLER.py
            enabled: false
          - component: test_RV32I_REGISTER_FILE.py
            enabled: true
          - component: test_RV32I_TYPE_CONVERTER.py
            enabled: true
          - component: test_TOP_LEVEL.py
            enabled: false
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install packages
      run: |
        apt-get update -qq      \
        && apt-get upgrade -y   \
        && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends  \
            ca-certificates     \
            wget                \
            libmpc-dev          \
            libpython3-all-dev  \
            npm                 \
            python3             \
            python3-pip         \
        xxd                     \
    - name: Install toolchain
      run: |
        mkdir ${{ env.RISCV_PATH }}
        wget -q https://github.com/FelixLuciano/riscv-gnu-toolchain/releases/download/rv32i-240427/rv32i-unknown-elf-gnu-toolchain.tar.gz -P /tmp
        tar -xzf /tmp/rv32i-unknown-elf-gnu-toolchain.tar.gz -C ${{ env.RISCV_PATH }}
        rm /tmp/rv32i-unknown-elf-gnu-toolchain.tar.gz
        echo "PATH=$PATH:${{ env.RISCV_PATH }}/bin" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        npm install -g netlistsvg
    - name: Run Synthesis
      run: pytest -k ${{ matrix.component }} -m synthesis
    - name: Run Testcases
      if: ${{ contains(matrix.enabled, true) }}
      run: pytest -k ${{ matrix.component }} -m testcases
